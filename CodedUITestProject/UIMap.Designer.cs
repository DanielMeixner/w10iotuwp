// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            XamlButton uIBtnFreezeButton = this.UIRefrigeratorControlUWindow.UIBtnFreezeButton;
            XamlText uITemp16Text = this.UIRefrigeratorControlUWindow.UIBtnTempButton.UITemp16Text;
            #endregion
            Assert.AreEqual("Temp: -15", uITemp16Text.DisplayText);
        }
        
        /// <summary>
        /// AssertMethod2 - Use 'AssertMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod2()
        {
            #region Variable Declarations
            XamlButton uIBtnFreezeButton = this.UIRefrigeratorControlUWindow.UIBtnFreezeButton;
            XamlText uITemp16Text = this.UIRefrigeratorControlUWindow.UIBtnTempButton.UITemp16Text;
            #endregion            
     

            // Verify that the 'DisplayText' property of 'Temp: -16' label equals 'Temp: -16'
            Assert.AreEqual("Temp: -16", uITemp16Text.DisplayText);
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual AssertMethod2ExpectedValues AssertMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod2ExpectedValues == null))
                {
                    this.mAssertMethod2ExpectedValues = new AssertMethod2ExpectedValues();
                }
                return this.mAssertMethod2ExpectedValues;
            }
        }
        
        public UIRefrigeratorControlUWindow UIRefrigeratorControlUWindow
        {
            get
            {
                if ((this.mUIRefrigeratorControlUWindow == null))
                {
                    this.mUIRefrigeratorControlUWindow = new UIRefrigeratorControlUWindow();
                }
                return this.mUIRefrigeratorControlUWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private AssertMethod2ExpectedValues mAssertMethod2ExpectedValues;
        
        private UIRefrigeratorControlUWindow mUIRefrigeratorControlUWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'btnTemp' button equals 'Button'
        /// </summary>
        public string UIBtnTempButtonControlType = "Button";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'btnTemp' button equals 'Button'
        /// </summary>
        public string UIBtnTempButtonControlType1 = "Button";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'btnFreeze' button equals 'Button'
        /// </summary>
        public string UIBtnFreezeButtonControlType = "Button";
        
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Temp: -16' label equals 'Temp: -16'
        /// </summary>
        public string UITemp16TextDisplayText = "Temp: -16";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRefrigeratorControlUWindow : XamlWindow
    {
        
        public UIRefrigeratorControlUWindow()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "RefrigeratorControlUiApp";
            this.SearchProperties[XamlControl.PropertyNames.ClassName] = "Windows.UI.Core.CoreWindow";
            this.WindowTitles.Add("RefrigeratorControlUiApp");
            #endregion
        }
        
        #region Properties
        public UIBtnTempButton UIBtnTempButton
        {
            get
            {
                if ((this.mUIBtnTempButton == null))
                {
                    this.mUIBtnTempButton = new UIBtnTempButton(this);
                }
                return this.mUIBtnTempButton;
            }
        }
        
        public XamlButton UIBtnFreezeButton
        {
            get
            {
                if ((this.mUIBtnFreezeButton == null))
                {
                    this.mUIBtnFreezeButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIBtnFreezeButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "btnFreeze";
                    this.mUIBtnFreezeButton.WindowTitles.Add("RefrigeratorControlUiApp");
                    #endregion
                }
                return this.mUIBtnFreezeButton;
            }
        }
        #endregion
        
        #region Fields
        private UIBtnTempButton mUIBtnTempButton;
        
        private XamlButton mUIBtnFreezeButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBtnTempButton : XamlButton
    {
        
        public UIBtnTempButton(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlButton.PropertyNames.AutomationId] = "btnTemp";
            this.WindowTitles.Add("RefrigeratorControlUiApp");
            #endregion
        }
        
        #region Properties
        public XamlText UITemp16Text
        {
            get
            {
                if ((this.mUITemp16Text == null))
                {
                    this.mUITemp16Text = new XamlText(this);
                    #region Search Criteria
                    this.mUITemp16Text.SearchProperties[XamlText.PropertyNames.AutomationId] = "tbTemp";
                    this.mUITemp16Text.WindowTitles.Add("RefrigeratorControlUiApp");
                    #endregion
                }
                return this.mUITemp16Text;
            }
        }
        #endregion
        
        #region Fields
        private XamlText mUITemp16Text;
        #endregion
    }
}
